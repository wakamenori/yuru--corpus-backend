水野さんって編集者ですよね?

はい

プログラマーですか?

違います

でもこの2つって一緒ですよね?

一緒じゃないです

いや、ほぼ一緒だと思うんですよ

全然違うけどな

ほぼ一緒の仕事だと思うんですよね

だって僕らの場合は相手は人ですから

生身の

それも才能にあふれた人たちを

相手にした仕事でやって

なるほど

プログラマーの場合は

相手は人ですから

プログラマーの場合は

物というかね

プログラムでしょ?

タイトルとか見出しとか

一番こだわりません?

こだわるね

じゃあプログラマーと一緒

違うって

一部分が一緒だっただけだって

言葉

水野さん好きなんで

言葉紹介しようかなと思って

これ多分聞いたことないんじゃないかな

リファクタリング

リファクタリング?全然知らないですね

多分聞いたことないですよね

これね調べる限り

多分コンピューター関連でしか

使われない言葉だと思う

聞いたことないです

何でしたっけ?観能小説の回で

言いましたよね

中層化みたいな観能小説でしか

使われない言葉みたいな感じで

これもエンジニアリングでしか使わない言葉だと思う

リファクタリング

リファクタリングの

由来については一生懸命

調べたんですけどよく分かりませんでした

漠然としてたんだけど

何かっていうと

ソースコード

プログラマーが書いたプログラムですね

をきれいに書き直す作業

のことです

リライトですね

リライトですねつまり

これね多分ファクター

因数分解する

動詞だと要因とかですけどファクター

動詞だと因数分解するっていう意味があるらしくて

そっから来てるっぽい

っぽいです

おそらく語源的にはね

ファクターにしても

ラテン語のファクトみたいなやつ

ですよね多分

作るみたいな英語にあたる

doみたいな動詞があったので

そこから大元をたどる

全然僕は分かんないんですけど

そういうことにしておいていただいて

要は外から

見た振る舞いは変えない

プログラム自体を変えちゃう作業じゃなくて

やってることは

一緒なんだけどきれいにしよう

っていう作業ですね

深井 因伝と

開業する場所変えるとか

そういうやつ

樋口 ありましたね因伝ととかももしかしたら

リファクタリングと言うかもしれないけど

それはあんまりリファクタリングとは言わなくて

例えばですけど

ごちゃごちゃしてる

重なった処理

これとこれほとんど同じ処理だな

みたいなやつをまとめるとか

そういうのですね

深井 あっそんなリライターさんみたいな人が

いるんですか? 樋口 あっ違います

その大抵の場合はそのコードを

書いて自分でやる 深井 あーじゃあ

推考に近いわけね 樋口 そうだね

だし、あーごめん自分でやる

大抵は言い過ぎかな、前任者が書いていったものを

新しい担当者が

汚ねーなって

書き直すケースも当然あります

深井 なるほどはいはい

樋口 僕も自分が2ヶ月前に

書いたコードを見ると

汚いなー

衝撃を受ける

自分自身も自分が書いたものを

直す 樋口 びっくりする時ありますよ

なんでこの条件分岐書いたんだろう

みたいな、この条件分岐しなくていいけどな

ときがよくある

深井 よくね

初稿、初めて書いた原稿で

ちょっと人に見られるのは恥ずかしいな

みたいなあると思うんですけど

じゃあ例えば堀本さんが書いた

プログラムを

すご腕のエンジニアの方に見られるとかってなったら

顔から火が出るほど恥ずかしいんですか?

樋口 恥ずかしいですし、僕は今その苦行に

耐えていまして

ずっとあのサイト一人で作ってたんですけど

今は結構分離して

二人で作ってるんですね

深井 堀本さんともう一人

樋口 そうです、その方はちゃんとした本職のフロントエンドエンジニアの方で

バックエンド

水野さんに分かるように言うと

処理するところ

データを処理したりするところは依然として

僕が書いていて

見た目のところはその人が書くっていう

分業になりまして

その結果ですね

見られるわけですね

僕が書いたものが

深井 そのフロントの方を見られるってことですよね

樋口 そうです、てかソースコードは丸ごと共有してて

二人で一緒に両方書けるようになってるので

丸ごと見られるので

ひいいいいい

って思って

見ないで

恥ずかしいからって思いながら

しょうがねえなと思って

深井 その方きっとバキバキ直していく?

樋口 まあそうですね

限りなく作り直しに近いところはありますし

汚いところは

汚いなって思われてるでしょうね

深井 ああなるほど

樋口 だから本当はフロントで

処理すべきものなのに

なんかエラー出るなあ

よくわかんないからサーバー側でレンダリングしちゃおう

ってこっちでやるべきもの

操作をこっちでやってるところとかあるんですよ

エラーが出てよくわかんないから

こっちで操作することにするみたいなやつをやってて

深井 だからごまかした部分がある

樋口 そうです

だからなんていうんですか

オフィスでやらなきゃいけない仕事なのに

家持ち帰ってやっちゃってるみたいな

深井 ああでもねそれねちょっと気持ちわかるのがあって

エクセル弱者なんですよ僕

樋口 ああそんな感じするねみずほさんは

深井 なので簡単な関数とか

わかるんですけど

僕もそうだし

もっとエクセル弱者な人って

サムとかで足し合わせればいいものを

ベタ打ちでさ数字打つ人っているんですよ

樋口 ああいるー

深井 それをその後の人が引き継ぎで見たときに

えー何これみたいな

樋口 エクセル弱者ってありますけどそういうのも近いですよね

深井 なるーあるあるある

そういうことです

まさにそれ

めっちゃいい例え出したな

ヤンヤン 何なんだよ

樋口 どこで興奮してるの

深井 リファクタリングの説明を

一般の皆様というか

非エンジニアの方に伝えるのは

不可能だろうと僕は思っていて

これくらいの解想度でいいだろうと思ったんですよ

恥ずかしいんですよ

僕こういう人に見られてははははみたいな

家持ち帰っちゃってやってるみたいなところあるんですよ

くらいの感じでやろうと思ったら

完璧な例え出てきたんで

それを俺が台本に書くべきだったやつだと思って

感動しましたありがとうございます

助けてくれて本当ありがとう

そうまさにそれです

全部足しちゃってるやつをサムに書き直す作業がリファクタリングです

ヤンヤン あーはずいっすね

はずいね

樋口 前任者がね前任者がそれバレたら超恥ずかしいですよね

ヤンヤン いやあのね似たの話しちゃうんですけど

ワードも僕弱いのよ

だからちょっと僕の例ではないんですけど

ちょうど最近twitterで見たのが

そのワードで行列

数学のね行列書こうとしたんだけど

その行列の書き方知らないから

でけえ括弧

どーんってでかく置いて

書く行に0、2、3

みたいなっていう風にしてる

プリントかなんかの

画像と一緒に

タックス?なんだっけ

樋口 手符ですねたぶんみずほんさんが言った

マークアップで数式書けるやつでしょ

ヤンヤン そうそれを覚えてほしい

みたいなことをつぶやいてるツイートを見たんですけど

それとかもでも俺はね

ワードでそれ書けないからやっちゃいそうなのよ

そういうことだよね

樋口 そういうことです

ヤンヤン こいつワードでこれで行列書いてるよみたいな

樋口 そうそうそういうことそういうこと

ヤンヤン そうなんですよ

ちなみに予告しときますと

手符の回いつかやります

タイトルだけもう決まってまして

マツコの知らない世界の言い方で

みずのの知らない非ウィズビグの世界

っていうのやります

樋口 ウィズビグの?

ヤンヤン 非ウィズビグの世界

樋口 すげえなんか気持ちいいですね

ヤンヤン いつかやるんでお楽しみにいただければ

樋口 全然楽しみじゃないです

ヤンヤン 内部構造がぐちゃぐちゃなものを

綺麗に直す作業

見た目は一緒みたいなのが

リファクタリングですね

エクセルもそうじゃん足し算全部しようが

サム使おうが出てくる答えは一緒だよね

でも中身は全然違ってて

こっちの方が圧倒的に保守しやすいよ

っていうのを目指します

リファクタリングについては諸説あって

なんかやらない方がいいみたいな話もあるんですよ

深井 へえ

ヤンヤン これは今動いているものに

手を入れると動かなくなるリスクがあるから

深井 確かにね

なんか変なエラーが起きてしまうと原因が

どこなのか分かりづらくなっちゃう

ヤンヤン そうですねだからあんまりやらない方が

いいんじゃないかみたいな派閥もあったりしたんですけど

多分最近はしたべな気がしていて

今回のタネ本

プリンシプルオブプログラミング

も当然やった方が

良いときれいにしておかないと

次のやつの負荷もえぐいし

結局何度も何度もわけ分からない

コードと戦うことになってしまって

とんでもないコストになるので

とにかく少しずつ書き直せと

いうことを書いてありました

深井 ああなんか今聞いてて思ったけどさ

そのプログラマー

プログラムする人の世界ってさ

引き継ぎめちゃくちゃ大変だな

ヤンヤン ああそうなんすよ

なんかさ前任者がさ

特に意思なく残したものを見てさ

意思っていうかメッセージなく

なんかあれこれなんでこうなってんだろう

この処理変だなってなったのをさ

前任者があれこれ考えた結果そうしてる可能性と

深井 そうです

ヤンヤン 全然何も考えずにごまかした可能性両方あるわけだよね

深井 そうです ヤンヤン むずっ

深井 めっちゃむずいっす ヤンヤン きっつー

ヤンヤン めっちゃむずいっす 深井 大変ですね

ヤンヤン これもね多分プログラマーあるあるだと思うんですけど

深井 はい

ヤンヤン なんか複雑な条件分岐してて

こういう時はこうしますこういう時はこうしますって書いてあって

読んで

ん?この分岐いらないだろみたいな

このケースないだろって思って

消すんすよ

こんな状況ないよなと思ってこんな状況ないのに

だらだら書いてるからバカだなーと思いながら

消すんですけど

動かしてみたらあったわその状況

なって動かなくなって

絶望する

これあるある

それあるんだそのパターンあるんだっていうのがめっちゃあります

深井 数学とかでもね

yイコールx分のxの2乗プラス2xプラス1

この関数をグラフで書きましょうとか言われるとさ

めちゃくちゃ簡単じゃん

みたいなxの2乗プラス2xプラス1って

xプラス1の2乗だから

あ簡単だって書いてグラフ書くと

あ

x0の時これだめだ

関数書けない

みたいなことあるじゃないですか

条件みたいなのもなんか当たり前のように

はいはいこんなの余裕でしょって読むと

意外とね見落とすみたいなことありますよね

深井 どっちかっていうと数学の問題でいうとあれかな

倍分けに近いかな

玉がなんか確率の問題とかで

玉を3個取り出すとき

赤が2個青が1個の倍

みたいなのを分けてるんだけど

よし完璧だ

って数え上げてやったわと思いきや

すげえ抜けてるみたいな

ヤンヤン 今僕は範囲の話を変数が取り得る範囲の話をしたんだけど

ではなくて倍分けの話だったんですよね

深井 の方がそうですね自然な事例な気がする

ヤンヤン 失礼しました

深井 だからこれ見落としててああ動かなくなっちゃった

ケースがある

でもそうか水野さん今の例えもあるわ

そっちのパターンもありますね

ヤンヤン 範囲指定のことも

深井 そうマイナスの値が入ったら終わったみたいな

時もあるんで

この分岐その時のためだったんだみたいなパターンも確かにあります

そうなのよだから

人が書いたコードを安易にいじって

大変なことになるわねよくあるやつ

ヤンヤン なるほど

深井 でこのじゃあ直しますと

直すときの手がかりってなんだと思いますか

ヤンヤン プログラム

深井 でプログラム

をきれいに直す

ヤンヤン そうきれいに直したいなって思った時の手がかりはなんだと思いますか

深井 手がかり?

方向性じゃなくて

こう直すと良いとかって話があって

ここは直せるなって思うところってこと?

え?そんな見たことないから知らないよ

プログラムを

ヤンヤン フィーリングでぜひ答えてほしいですね

深井 長いところ

ヤンヤン 正解はですね匂い

臭いところです

深井 ああ

やっちゃったよ

ついに言っちゃったよそっち側に

深井 はいはい

ヤンヤン しょうもないクリシェレトリック

使うやつだと思ってる僕のこと

深井 もう

ヤンヤン これね用語としてあります

深井 え?

ヤンヤン 香土の匂いっていう用語があります

深井 プログラマーになるためには鼻も必要な

フランスの調香師

香水を作る方とかはね

鼻が強くないとって言いますけど

ヤンヤン 言いますね

深井 漢字の四角なんですね

ヤンヤン 違います

物理的な匂いはしないんだけれども

香土の匂いって表現される

ちゃんと本書にも

書立てされております香土の匂い

深井 鍵取る方法みたいな

それは皮肉の意味での鍵取り

ヤンヤン 皮肉の意味での鍵取る方法っていうか

臭いものの特徴みたいなのが

書いてあって香土の匂い

英語だと

Code smellっていうらしいですけど

Code smellはですね

これはこのPrinciple of Programming

っていうよりはネットとかから収集してきた

よく言われる香土の匂い

なんですが

例えば重複したコード

さっき言ったやつだね

同じこと繰り返してるとか長すぎるメソッド

深井 つまり例えば

同じ行があったりしたやつは

これを繰り返しますよっていう

1行とか2行の短いコードに書き換えられたりする

ヤンヤン そうです

極端な話で言うと

消費税が8%の商品と

消費税が10%の商品で

それぞれ別の処理をしてたとしたら

もったいないですよね

8%の時は100分の108を

かけますっていう

関数があって

10%の時は100分の110をかけます

っていう関数があったらまとめた方が

いいですよね

消費税を渡してその消費税に応じた処理を

しますにした方がいいよね

みたいな感じ重複コード

とかミノさんがさっき言ってたことだね

長すぎるやつ

一つのメソッド手続きだと思ってくれればいいでしょう

一つの手続きが長すぎる

とかは

バラすべきだよね

とかねおしゃれなやつも結構あって

昨日の横連簿

これおしゃれだね

深井 横連簿ね

横連簿は

誰

自分の好きな人がいて

その人は別の人が好きでっていう状況

ヤンヤン そういうことですねAさんとBさんの恋愛を見て

食うみたいな

Aさんが入りたいのにみたいな

深井 俺がAさんのこと好きなのにってやつですね

ヤンヤン 昨日の横連簿とかね

深井 どういうこと

ヤンヤン 面倒くさいんで説明はしないんですけど

コードの匂いについて文献を収集しているときに

昨日の横連簿っていうのがあるんだ

みたいなね一応わかる人向けに

説きますと他のクラスの

メソッドをカドに用いているクラスのこと

深井 でもなんか横連簿っぽいね

ヤンヤン 横連簿っぽいなと思っておいてください

深井 はいはい

ヤンヤン 不適切な関係っていうのもありましたね

大人かなみたいなね

これもだから理解は諦めてくれていいんですけど

他のクラスの実装の詳細に依存している

クラスのことですね

とかねあとね

相続拒否っていうのもありますね

深井 相続 ヘリテッジ

ヤンヤン 相続拒否っていうのもあって

これもオシャレじゃないちょっと

いい名前だな全部

深井 なんかねやっぱガベージコレクションのときから

思ってましたけど

ヤンヤン いい単語例えを作りますね

樋口 そうなのよ遊び心ある名前は結構多いですね

深井 情報隠蔽だけはだめだけど

それ以外はおおむね良いですね

樋口 情報隠蔽だけは固くないに

嫌がり続けてますけど

深井 あとリバースだけリバースじゃない

ノット回路

あれだけはちょっとビッグボーン派ですけど

樋口 相続拒否もいいですよね

ちなみに一応いい名前を言っておきますと

規定クラスの規約が尊重されない形でのメソッドのオーバーライドのことですね

深井 ああわからなかった

樋口 最後まで聞いたけどわからなかった全然

深井 とかさ

色々なアンチパターンと言ったりするんですけど

このパターンにはまると大体失敗してますよ

っていうアンチパターンですね

コードの匂いっていうのは

これがあると大体失敗してる

みたいなものを経験則として

エンジニアは積んでいくし

それを

見た時にこれ臭いなと思えると

良いですよね

というのがコードの匂いですね

樋口 匂いがするとかじゃなくて

臭いって言ってもいいんじゃない

深井 いや知らない

樋口 あれ言ったことないな

コードの匂いわからんなこいつ

深井 言ったことないっす

あんまり言ってる人は見たことない

樋口 用語としてあるのに

深井 コードの匂いは用語としてあるけど

多分わからない

例えばエンジニアの方と打ち合わせしたりしてて

ここが臭いねとか

言ってる人は見たことないっす

樋口 匂うねとかも

深井 じゃあリアルで言ってる方はコメントに

僕はよく嗅いでますってことをね

樋口 リアルで言うとすると

ここの関数処理多すぎるから

分割した方がいいんじゃないですか

って言いますね

臭いとか匂いとか言わないと

深井 言わないの?

樋口 言ってる人は見たことない

名前はオシャレで

概念としてはこういう

プログラミングプリンシプルみたいな

本読んでると出てくるんだけど

言ってる人は見たことないかもしれないです

この本

プリンシプルオブプログラミング

繰り返し出てくるので言うと

その場しのぎで

コードを書くなっていうのがめちゃくちゃ出てくるんですね

深井 直感的に

Excelの例えでもよく分かりますね

樋口 そうそうそうそれよくやっちゃうのよ

サムみたいなの多分あるんだけど

めんどくさいなーって

とりあえず全部足しとけばいいかって言って

その場しのぎでやっちゃいがちなんですよ

これがしょっちゅうあって

樋口 面で言いますと

僕の場合はですね

もうひどいのよ

タイプスクリプトっていう

水野さんにすごく分かりやすいように言うと

JavaScriptって聞いたことないですか?

JavaScriptってやつがあって

めちゃくちゃいろんなところで使われてるんだけど

ウェブサイト見たときのアニメーションとかあるじゃん

派手なアニメーションとか結構

JavaScriptで動いてたりする

最近はHTML CSSだけで結構

ラグジュアルなアニメーションできたりするから

面白くないような気もするんだけど

ウェブサイトで動き派手なのあったりすると

JavaScriptかなと思っといてくれるといいかな

深井 僕レベルはその理解で止めておきます

ヤンヤン みたいな

そのJavaScriptの問題点として

型を宣言できない

深井 出た型

ヤンヤン 型を宣言できないというか

型安全じゃないみたいなのがあって

すごい歯切れ悪いなずっと

ヤベェ

前回なんかこれは情報隠蔽してるんで

必要な情報しか言わないですよ

深井 べきならば

ヤンヤン えっとべき等生じゃなくて

ヤンヤン 俺も忘れた何の規則だっけこれ

パルナスの規則

パルナスの規則を満たしてますとか言ってるんだけど

今日ちょっと調子悪いです

深井 ねえあんなにべき等生を満たしてないものに対して

べき等生を満たしてると言っていいみたいなこと言ってたから

ヤンヤン ちょっと調子悪いな

深井 だから本来は

JavaScript

リプトではないんだけれども

アニメーションを動かしているようなものとして

イメージするのが近い

ヤンヤン タイプスクリプトっていう言語に関しての話をしているってことですか

深井 しているってことです

タイプスクリプトとかは型安全

要するにこれは数字ですよ

これは数字が入るもんですよ

って一度宣言しちゃうと

数字以外のものを入れようとするとエラーになる

みたいなやつなんですよ

ヤンヤン リッパーっていうかね

深井 これは安全なんですよねJavaScriptとかは割と適当に運用しちゃうので

本来数字を入れなきゃいけないものに

文字入っちゃったみたいなことがよくあるんですよね

それはエラーの温床になるので

マイクロソフトが作ったのがこのタイプスクリプト

上位互換じゃないな

変形みたいなものなんです

タイプスクリプトだから

型をちゃんと運用できるやつ

数字に文字入れちゃいけませんみたいな

言語なんですけど

書いてるとエラーでめっちゃ怒られるんですよね

型が明確じゃないんで明確にしてください

みたいなこと言われるんですよ

これ本当にちゃんとしたエンジニアの方は

ちゃんと対応するんですよ

エラー消したいんですよとにかく

今動いてほしいから

めんどくせーなと思って

であのね

anyっていうのがあるんですけど

英語のanyな

あらゆる人々みたいなやつ

anyってとりあえずつけとくと

動くんですよ

なんでも

なんかすげーわかるわー

俺もあのさーExcelでさー

シャープハッシュRef

リファレンスエラー出ると

ベタ打ちしちゃうもん

めっちゃわかるわ

なにこれみたいな

で一回25って言っちゃいいんだろ

みたいなやっちゃうのよね

だからもう

any

とりあえずエラー出てるとこanyって書いとこう

って書きがちなんですけど

後から見返すとなんてことをしているんだろう

だってすごくないですか

本末転倒ですよJavaScriptは

型が曖昧だからエラー起こしがちなんで

ちゃんと警告を出すものを

マイクロソフトが作ってくれたんですよ

タイプスクリプトっていう

僕はそれのフレームワークを使ってるからタイプスクリプトで書いてるのに

なんかエラー出すなこいつ

って出さないようにしてるんですよ

意味不明な行動じゃない

やばすぎない

その行動

おろかすぎるんですよ

これをね我ながら自分でやってて

急いでるから

後から見返したらうわー

anyanyanyって書いてる

すげーこいつ

読める人が読んだらさ

めちゃくちゃ面白いんだろうね

そのりもさんのプログラム

ひどすぎるだろこのコメント

そのために勉強したくなってきましたね

そうですね

これはね見せんのも恥ずかしいなって思いながら

エンジニアの方と一緒に

作業したりしてますね

変な話ね大学生の子に書いたブログより

見られる人も見られたら

嫌かもしれないですね

みたいなやつは

完全に一時のぎで

書いてるんで完全にあれですね

臭い匂いがするというか

腐臭がするコードだと思います多分

いやなんか今聞いてて思った

そのさー堀本さんのさ

拙いプログラムを

ガチのエンジニアの人

二人ぐらい呼んで

ここに座ってもらって

これをモニターで見ながら

実況するやつとか欲しいな

見ても俺分かんないんだけど

あー堀本さん

このタイムスプリットの

思想と真逆のこと

してますね

おかしい行動ですよこれはみたいなことを

めちゃくちゃ言われてるやつとかみたいな

複音性つきでみたいですね

楽しいかもしれないし何だったら

僕それ一人でもできますよマッチポンプでできます

そうなんだ

なんでここ分岐させたんだ

明らかにこれこの分岐

イフ文で書くべきではないよね

全然違う書類として書くべきじゃない

これって言ってきます

でも堀本さんよりもさらに

技術的にすごい人もいるわけでしょ

素人腕みたいな

そういう人がやってくれた方がよりツッコミどころは多分

そうなんだ

ナイツの花輪さんがね

自分の事務所の

芸人さんの漫才の台本を

見ながら赤いレスルみたいな

youtubeチャンネル受けてますけど

プログラム版でないんですかね

確かに

ダメな行動を読みながら酒飲んで

ダラダラ喋るみたいな

どうなんですかね

すごいかも

コードレビューって言うんですけど

そういう名前があるんですか

新卒で入ったエンジニアが

パートナー

メンターみたいな人について

書いたものをとりあえず地区一位フィードバック受ける

こここうした方がいいよ

フィードバック受けるっていう

コードレビューっていう文化があるんですが

当然当たり前にみんなやってるんですよ

でもそれを

ペンタメにしましたみたいな

youtubeでやってますみたいなのは

ないですね

エンジニアの方が見て面白くするのは簡単だと思うんですけど

一般に分かるように

例えてここでやってるこれってのは

例えて言うならこういうことみたいなのを

交えて喋ってくれたら俺見ちゃうかもしれない

そのエンタメはあんまり見たことないですね

ガチのエンジニアがコードレビューしてる動画は多分ありそう

いいかもしれない

いい文化生まれたかもしれないですね

いい企画を考えた

いつか新企画でやるかもしれませんね

堀本さんのダメなプログラムを

是非とも見て

是非とも酒を飲みながらゲラゲラ笑いたいっていう

すごい腕の方々がいたらね

手を挙げていただけるとね

いいかもしれない

もしいらっしゃれば

お便りフォームの方にお送りいただければ

いつかやるぞってなった時に

お声掛けさせていただきますので

皆さんドシドシお送りください

やだな俺

自分が恥ずかしめられる相手を募集してるのめっちゃやだな

例えて言うならあれですからね

大量の脇の甘い書解のやつとかを

言語学者が見てるのを

僕が募集するみたいなもん

あれ見てボロクソ言ってくれる人募集してます

地獄だね

そんな高度の匂いの中で

タネ本プリンシップルオブプログラミング

が口すっぱくして

何度も何度も言ってるのが名前

なんですよ

名前

名前は最重要課題である

名名かな

名名は最重要課題

何度も書いてあるんですけど

これはコードに付ける名前すべて

なんですけど

ファイル名とか

関数の名前とか

水野さんの分かりやすく言うと

手続き一般の

名前だと思っておけばいいでしょう

それ名前とか付けてるんですか

そうだよ

決まってんじゃないのその名前は

使えるもの

一番ちっちゃいものは決まってて

この間の半導体で言うと

水野の記号は決まってたじゃん

それは決まってるんだけど

それをいっぱい組み合わせて

半可算機とかは決まってないわけよ

だから基本パーツは

もう決まってて

レゴで言うとさ

使えるパーツは限られてんじゃん

それを自分で50個くらい組み合わせて

水野っていう像を

作りましたと

これは水野像にしよう

もう一個ちょっとバージョン違うやつで

表情違うやつ作ってレゴで

水野笑顔っていう名前にしよう

じゃあ次にもっとでかいもの作る時に

水野笑顔3個取って

ことになるわけですよね

ていう感じ

深井 なるほどだからプログラムの中で

例えばゆる言語学ラジオの

公式サイトで言ったら

メールアドレスを

送ってくれた人にカラーメールを

何かこちらからメールを飛ばすみたいな

作業にそれに名前を付けておくみたいな

メール送り作業みたいな

名前を付けておくと

例えば

堀本さんが手から離れた時に

公認の人とかが見ても

ここの行の部分はメール送る作業について

書いてるんだなってことが分かりやすく

使われるわけですね

樋口 そういう感じであるまとまり

自分で作ったまとまりに名前を付けるっていう作業をやってるんですが

これがやっぱ

重要なんじゃないかと

最も重要な作業なんじゃないかと

種本も口すっぱく言っていますし

僕がこの台本に

命名は最重要課題である

みたいなことを書いたら

サポーターコミュニティの方がね

緩く茶読してくれる人を募集してるんですけど

サポーターコミュニティの方が

私も常々

命名が8割だと思ってたので

プログラマーの仕事を

8割は命名だと思ってたので

これは素晴らしい事実を周知してくれてます

みたいな

楽しみですみたいなすごい熱のある

応援コメントをいただいて

勇気づけられております

深井 でもね同じアナロジーか分からないですけど

僕がやってる編集の仕事とかは

完全にタイトルがそれですね

タイトルを考えることが

特に雑誌とかだとね

特集タイトルとかだと

もういいタイトルさえ決まれば

おのずとできることとかあるんですよね

原稿が

だから似てるかもしれないですね

樋口 だしだからそれ最初に

言ったやつじゃんタイトルを

つけることにめっちゃこだわる仕事って

編集者もプログラマーも一緒ですよね

深井 そうですね

樋口 自ら穴に落ち始めてます

今自ら実中にハマりに

行ってますもん否定してたけど

深井 そう見えてるんですねでも堀本さんその後にこう言ってましたよ

だからプログラマーと

編集者同じなんですって言ってましたよね

樋口 同じでしょ 深井 どこが同じ

樋口 同じでしょ

名名に最もこだわって

名名がうまくいけばもうあとはサクサク

いったりすることもある 深井 なるほどじゃあ

聞きますけど名名を一生懸命

する理由はなんですか

樋口 プログラマーが

名名を一生懸命する理由はそれに

ぴったりハマっていて

完璧なタイトルっていうのがつけるのが

難しいからです

それを探らなきゃいけない

深井 簡単じゃないの別に

名前つけるのは

深井 ああと思うじゃんよくあるパターン

っていうかなんなら多分僕ゆる言語学ラジオの

サイト構築するときとかにこうなってるな

っていうよくあるパターンやります

顧客情報を登録する

新規登録するみたいなやつを

レジスターカスタマーインフォメーション

みたいな名前つけるとするじゃないですか

でレジスター

カスタマーインフォメーションを

中身書いてるんですね

で登録するぞって最初書くんだけど

登録する前に

これ名前

ふざけて500文字

とか登録されたら困るなみたいな

500文字登録してないから

チェックしようみたいな

でもちゃんとしたメールアドレスじゃないと困るな

ABCみたいなやつ送られてきたら困るな

メールアドレスの要件チェックしよう

みたいなことし始めるって言ってるわけです

そうすると

レジスターカスタマーインフォメーション

顧客情報の登録を書いてたつもりなのに

なんかほとんどの場所は

検証に使ってるみたいな

ほとんどの場所検証してるなこれ

これバリデイト

カスタマーインフォメーションとかの方が

適切な名前なのでは

みたいになったりするんです

でそうなった時に

ちゃんと書き直そう

名前つけ直そうぜっていうのがリファクタリング

なわけですけど

一回書いちゃったんでめんどくさいからそのままになってることとかよくあります

ヤバいねそれはね

みたいなことですよだからその内容を

適切に過不足なく

表明する名前

を探るのはめっちゃ難しいし

これが結構プログラマーがやっている

クリエイティブな仕事なんじゃないか

みたいなところありますね

なるほどね確かに編集の仕事でも

僕せいぜい今

5年目とかなんでそんなキャリアとして長くはないんですけど

常々感じるのは

堅牢なタイトルをつけないと

見失うことあるんですよね

あれ?

これ何の取材してたんだ

どんな話聞ければこれよかったんだ

みたいなことを見失うことがあるんですけど

しっかりとした軸足になるタイトルさえついていれば

おのずとね取材は上手くいくんですよね

素晴らしい

だから経験則として

僕が今いるその編集部で

あまりやらないようにしているのは

タイトル案

タイトル案

なんとかなんとかの未来

あーぼやっとするね

これはねまずい

何聞いたらいいか分からないもんね

未来とか

何々とは

何々入門

みたいなものとかって

角度をつけてないタイトルなんですよね

それが本当にみんなが

知りたいと思っているものだったら別にそれでいいと思うんですけど

大抵の場合ってそうじゃないから

そこでそのなんとか入門

なんとかってつけちゃうのって

すごいその

こっちでも何も仮説を立ててないし

何をするのか決めてないのに

テイストしちゃうものよくあるから

それつけないようにっていうのを

気づくのに3年くらいかかりましたね

大分かかりましたね

やっぱそんなみずほさんはこのプリンシップ

オブプログラミングを読んでいればね

1日で気づけたんですよね

この本読んでるとあそうか命名大事なんだ

命名最終要課題なんだ

そうか命名の中身とモジュールが常に一致してないといけない

強い命名じゃないといけないんだということを

ここから学び取れるんで

読んどけばよかったですね

深井 編集者向けに書かれてないからね

樋口 アナロジーでね上手に抽象化すれば

これ活用できたはずなんでね

おすすめなんですけどねこの本

深井 そうですねそれを知ったところでね

それを未来とかつけないように

他のタイトル考えるのが難しいですけどね

樋口 最後にねプログラマーの

三大美徳の話しとこうかなと

聞いたことあるこれ

三大美徳言いますね

対満

短期

傲慢

以上です 深井 避けろってことですか?

樋口 いや違いますこれです

美徳が対満と短期と傲慢です

深井 なんかね対満は

ちょっと今までの話で

分かるというか

その要はサボれるようなものを

作ることが良いんだよねきっとね

樋口 そうです素晴らしいそう

効率化した方がいいよねみたいな話だね

深井 短期の復元難しいな

なんで短期がいいんだろうな

あーでもなんか

すぐイライラするってことは

間違いに気づきやすい

樋口 まあそんな感じですね

ここパフォーマンス悪いなみたいな

ここ動作遅えなみたいなところに対して

早くしよってなる

深井 短期ってのが

最適化最速化の原動力になる

ということですね

対満?最後?違う違う

傲慢?

傲慢がね一番ピンとこないわ

何が傲慢がいいんですか

樋口 傲慢はさっきの僕の

エニーみたいなの書いちゃったやつに対して

俺が書いた行動が

こんなに汚くていいはずがない

深井 ああそういうことね

樋口 なから許さない

訳わかんないもの書いちゃったら

それは許せないので書き直す

美しいものを書こうが傲慢

深井 なるほど傲慢かそれ

樋口 笑

深井 傲慢か?

樋口 諸説あります

深井 過信とかのがよくない?

樋口 おっしゃる通りですね

プライドとかでもいいよね

深井 プライドとかのがね

言いたすぎて短期と対満に合わせた

樋口 そうセットリアして

言いたすぎて言っちゃったんじゃないかみたいな

レトリックありきで言い出しちゃったんじゃないかみたいな

とこはちょっと感じますけど

まあまあ

気持ちわかるじゃんそれ

合わせたくなるじゃん

これねすげえいいなと思ってて

このプログラマーの三大美徳は

やっぱプログラマーとしては

持ってた方がいいような気もするし

この傲慢めっちゃいいなと思ってて

これはねもっと広げられるなと

プログラマーに限らず

もの作る人全員に

広げられるんじゃないか

さっきは編集者とプログラマーで近いんじゃないかって

言ったんですけど

なんだったら他のクリエイターとかもみんなそうなんじゃないかな

っていう気がしてて

この気持ちいいじゃん

なんか作った後に

これでいいはずがない

感覚ありません?みずのさん

ありますね

心の中に厳しい自分勝っとくみたいなやつ

ありますよね

俺が手掛けたものこれじゃないだろう

これ理想型のはずないだろう

って気持ちがみんなあると思うんですよね

それをね特に感じて

よかったのが

僕みんなに激推ししてるんですけど

NHKの漫弁っていう番組

知らないわ

漫画家さんが

出てきて仕事場とか仕事の仕方とかを

VTRで全部取材される

それを漫画家の浦沢直樹先生が見て

ここが自分と違うね

ここがポイントだね

みたいなことを解説する

みたいな番組

企画の勝利

めっちゃ面白いんですよ

浦沢直樹先生が言ってたことで言うと

漫画家って漫画家で一括りにされるけど

全然違う仕事だと

ピザ職人と郵便配達員くらい違う仕事だ

って言っていて

仕事の進め方全く違うし

全然違う

100人いると100通りの

やり方があるわけで

それを解き明かすのは非常に面白いことだと思う

みたいなことをおっしゃっていて

まさにそうだなみたいな

いい番組なんですよ

紹介が特に良くて

東村昭子先生なんですよ

たられば娘とかね

カクカクシカシカとかの

東村昭子先生の回が良すぎて

僕はねこの回の

何が良いって

傲慢が良いなって思ったんですよ

東村昭子先生がね

アシスタントが

仕上げてきて完全に出来上がった

完成原稿を見て

書き直してたんですよ

ん?もう

出来上がってたんでしょ?

自分で下書きとかして

キャラのペン入れもして

背景こんな感じでよろしくって言ってアシスタントに出して

アシスタントさんがちゃんと

仕事したやつ

見て

なんか違うんだよなって

書き直し始めてたんですよ

これすごくて

しかもその満遍の文脈言っとくと

同時に7本とかの連載を抱えていて

しかも東村昭子先生は

お子さんいらっしゃいますから

お子さんを育てていると

育児に今集中していて漫画を書いている時間結構少なめですね

みたいなことを言っていて

その状態で何本も連載を抱えているもんだから

何やるかっていうと隙間時間で

ちょこちょこいつも寝もがいていて

アシスタントが来る作業をする日って

週に1日しかないらしいんですよ

だからその1日に固めて15人とかのアシスタントを呼んで

14時間とか

ぶっ通して作業するらしくて

すさまじいんですよ

ヤンヤン マネジメント能力がすごいな

ヤンヤン とんでもない効率で一斉にいろんな人に指示を出して

ヤンヤン それでお子さんも育てられているのやばいな

ヤンヤン めちゃくちゃ超人ですよ

っていうことをやっていて

死ぬほど忙しい東村昭子先生が

完成原稿出てきた段階で

これじゃないな

書き直そうって言って

書き直してるんですよ

ヤンヤン やばいな

ヤンヤン これ傲慢だよねさっきの

ヤンヤン 傲慢って言うとめっちゃ言い方悪いけど

プロとして譲れない一線

意地みたいなものですよね

私が書いた漫画がこれでいいはずがない

っていうのが現れてますよね

ヤンヤン そうね

ヤンヤン だからね

プログラマーの三大美徳傲慢はぜひ

みんなに覚えておいてほしいし

なんだったらこれはものづくりする人全般に

言える特徴なんじゃないかなっていうのが

すげえ今回改めて思いました

深井 その話聞くとさ

僕らさ

ゆる言語学ラジオも

ゆるコンピューター科学ラジオもさ

撮った素材をさ

95%くらい使っていて

今まででボツにしたのが

2回とかですよね

多分ね

もっとボスにするかじゃ

ヤンヤン こんなんでいいはずがねえと

捨てていった結果

深井 言い頻度が半年に1回

ヤンヤン やりすぎ

深井 完璧なものを

ヤンヤン それはね白髪三千丈ですね

深井 そうかこれ言いすぎだったわ

ヤンヤン 白髪三千丈ね中国のことわざがね

盛りすぎてることを例えるやつですね

公開順序がねどうかちょっと足しておきますけれども

深井 僕は今これ

後だな

白髪三千丈が出てくる方が後だなって思いました

ヤンヤン 俺もね間違えたと思って

難しいんだよこの

深井 やっぱこれあれじゃないですか傲慢足りてないんじゃないですか

ラジオパーソナリティとして

そんな公開順を推測し間違ってはいけない

っていう気持ちが足りないんじゃないですか

ヤンヤン そうですねやっぱずっと傲慢よりも

強耳の方がいいと思うんだよな絶対

絶対強耳でいいんだよな

深井 そうだねそんな気はするね

そういうみずのさんに対しては僕は

短期でめちゃくちゃ詰めていこうと思いますけど

ふざけんなよなんで公開順を頭に入れてねえんだよ

ヤンヤン じゃあ僕は対マンでいこう

深井 ええなんか

めんどくさいしなんでもいいじゃん

深井 ねえ ヤンヤン 見てなかったっすわー

深井 どんどんラジオが腐敗していくだけになるんでやめましょう

更新頻度が半年に一回になるのもだめだし

切れ始めるのもだめだし

ヤンヤン 僕も半年に一回切れたんで

あんまり準備とかしなかったんですけど大丈夫ですかね

深井 やめときましょう間違った悪用はしないでいただいて

ぜひぜひこれをいい方向でプロ意識として使えるっていう形で

この傲慢とかをものづくりする人は

持っておくといいよなって思ったっていうのが

今回の使命になります

ヤンヤン うんいい勉強になりました

深井 そんな感じで引き続きですね

まあこれでいいはずがないという傲慢を一生懸命活かしながら

このゆるコンピューター科学ラジオも作っていこうと思っていますので

皆さんも引き続き楽しんでみていただければなと思います

だから僕も大変なんですよ

プリンの貝とかそのまま出すの大変なんですよ

ヤンヤン 確かにね 俺もさんが考えたとおりがね

プリンなはずないよね

深井 そうなんだよこれでいいはずがないと思いながら

でもまあ取り直せないからしょうがないな

自分の傲慢との戦いをやりながら一生懸命出しておりますんで

よろしければ温かい応援の声などいただけると

大変励みになります

高評価コメントとか引き続きくださいませ

ヤンヤン よろしくお願いします

深井 あと感想のコメントお便りもガンガン募集しておりますので

どうぞよろしくお願いします

というわけで今回も終わりにしましょうありがとうございました

ヤンヤン ありがとうございました

